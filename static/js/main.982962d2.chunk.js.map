{"version":3,"sources":["components/UI/RegisterForm/RegisterForm.module.css","containers/MainContainer/MainContainer.module.css","containers/ButtonContainer/ButtonContainer.module.css","containers/FormContainer/FormContainer.module.css","containers/FormContainer/LabelContainer/LabelContainer.module.css","containers/FormContainer/InputContainer/InputContainer.module.css","components/UI/Backdrop/Backdrop.module.css","components/hoc/Auxiliary.js","utils/types.js","utils/utils.js","components/UI/Button/Button.js","containers/ButtonContainer/ButtonContainer.js","containers/FormContainer/LabelContainer/LabelContainer.js","containers/FormContainer/InputContainer/InputContainer.js","components/UI/Input/Input.js","components/UI/RegisterForm/RegisterForm.js","containers/FormContainer/FormContainer.js","components/UI/Backdrop/Backdrop.js","containers/MainContainer/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","auxiliary","children","types","inputTypes","placeholderValues","getButtonType","btnType","styledFn","componentName","inputFactory","mainContainerClass","inputName","inputType","inputClass","inputStyled","placeholderValue","className","name","type","as","placeholder","labelFactory","labelType","htmlFor","validationSchema","Yup","firstName","max","required","lastName","email","dateOfBirth","Date","city","country","Button","styled","button","props","theme","width","height","background","color","letterSpacing","fontSize","boxShadow","transition","defaultProps","CancelButton","ClearButton","ConfirmButton","buttonContainer","clicked","classes","ButtonContainer","div","duration","whileHover","x","onClick","labelContainer","LabelContainer","inputContainer","InputContainer","Input","input","RegisterForm","Header","initialValues","onSubmit","values","setTimeout","console","log","isSubmitting","handleReset","Form","InputsAndLabels","FieldErrorContainer","Field","ConfirmationContainer","EmptyContainer","ConfirmationAlert","SubmitContainer","Buttons","disabled","Component","formContainer","displayed","FormContainer","initial","opacity","animate","ease","exit","backdrop","Backdrop","MainContainer","state","isFormDisplayed","isBackdropDisplayed","handleToggleFormAndBackdrop","setState","this","App","Auxiliary","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.982962d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"RegisterForm\":\"RegisterForm_RegisterForm__2Duoh\",\"Header\":\"RegisterForm_Header__3NP5c\",\"Form\":\"RegisterForm_Form__1YwiR\",\"InputsAndLabels\":\"RegisterForm_InputsAndLabels__e3VDX\",\"FieldErrorContainer\":\"RegisterForm_FieldErrorContainer__2wqQK\",\"Field\":\"RegisterForm_Field__rkua9\",\"ConfirmationContainer\":\"RegisterForm_ConfirmationContainer__3si5l\",\"ConfirmationAlert\":\"RegisterForm_ConfirmationAlert__F30Ar\",\"SubmitContainer\":\"RegisterForm_SubmitContainer__1Z8X3\",\"EmptyContainer\":\"RegisterForm_EmptyContainer__uyC7P\",\"Buttons\":\"RegisterForm_Buttons__3x1vn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"MainContainer_MainContainer__Cdssn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonContainer\":\"ButtonContainer_ButtonContainer__3GAdu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormContainer\":\"FormContainer_FormContainer__3BKL4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LabelContainer\":\"LabelContainer_LabelContainer__IL_Ic\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputContainer\":\"InputContainer_InputContainer__3YJZR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2f156\"};","import React from \"react\";\r\n\r\nconst auxiliary = ({ children }) => <div>{children}</div>;\r\n\r\nexport default auxiliary;\r\n","export const types = {\r\n  CANCEL: \"CANCEL\",\r\n  CLEAR: \"CLEAR\",\r\n  CONFIRM: \"CONFIRM\",\r\n};\r\n\r\nexport const inputTypes = {\r\n  TEXT: \"text\",\r\n  DATE: \"date\",\r\n  EMAIL: \"email\",\r\n  FIRSTNAME: \"firstName\",\r\n  LASTNAME: \"lastName\",\r\n  BIRTHDATE: \"dateOfBirth\",\r\n  CITY: \"city\",\r\n  COUNTRY: \"country\",\r\n};\r\n\r\nexport const placeholderValues = {\r\n  GEORGES: \"Georges\",\r\n  VILLON: \"Villon\",\r\n  EMAIL: \"georgesvillon@mail.com\",\r\n  BIRTHDATE: \"01-01-1900\",\r\n  PARIS: \"Paris\",\r\n  FRANCE: \"France\",\r\n};\r\n","import { types, inputTypes } from \"./types\";\r\nimport React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nexport const getButtonType = (btnType, styledFn, componentName) => {\r\n  switch (btnType) {\r\n    case types.CANCEL:\r\n      return styledFn(componentName)`\r\n        color: #f9f9f9;\r\n        background: #322b57;\r\n        :hover {\r\n          background: #120f1f;\r\n        }\r\n      `;\r\n    case types.CLEAR:\r\n      return styledFn(componentName)`\r\n        color: #322b57;\r\n        background: #d1d0d8;\r\n        :hover {\r\n          background: #a5a3b2;\r\n        }\r\n      `;\r\n    case types.CONFIRM:\r\n      return styledFn(componentName)`\r\n        color: #f9f9f9;\r\n        background: #0da1a1;\r\n        :hover {\r\n          background: #086363;\r\n        }\r\n      `;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const inputFactory = (\r\n  mainContainerClass,\r\n  inputName,\r\n  inputType,\r\n  inputClass,\r\n  inputStyled,\r\n  placeholderValue\r\n) => {\r\n  return (\r\n    <div className={mainContainerClass}>\r\n      <Field\r\n        name={inputName}\r\n        type={inputType}\r\n        className={inputClass}\r\n        as={inputStyled}\r\n        placeholder={placeholderValue}\r\n      />\r\n      <ErrorMessage name={inputName} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const labelFactory = (labelType) => {\r\n  switch (labelType) {\r\n    case inputTypes.FIRSTNAME:\r\n      return <label htmlFor={inputTypes.FIRSTNAME}>First name</label>;\r\n    case inputTypes.LASTNAME:\r\n      return <label htmlFor={inputTypes.LASTNAME}>Last Name</label>;\r\n    case inputTypes.EMAIL:\r\n      return <label htmlFor={inputTypes.EMAIL}>Email Address</label>;\r\n    case inputTypes.DATE:\r\n      return <label htmlFor={inputTypes.DATE}>Date of Birth</label>;\r\n    case inputTypes.CITY:\r\n      return <label htmlFor={inputTypes.CITY}>City</label>;\r\n    case inputTypes.COUNTRY:\r\n      return <label htmlFor={inputTypes.COUNTRY}>Country</label>;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const validationSchema = Yup.object({\r\n  firstName: Yup.string()\r\n    .max(35, \"Must be 35 characters or less\")\r\n    .required(\"First Name is required\"),\r\n  lastName: Yup.string()\r\n    .max(35, \"Must be 35 characters or less\")\r\n    .required(\"Last Name is required\"),\r\n  email: Yup.string().email(\"Invalid e-mail\").required(\"E-mail is required\"),\r\n  dateOfBirth: Yup.date()\r\n    .max(new Date(), \"You can't be older...\")\r\n    .required(\"Date is required\"),\r\n  city: Yup.string()\r\n    .max(40, \"Must be 40 characters or less\")\r\n    .required(\"City is required\"),\r\n  country: Yup.string()\r\n    .max(40, \"Must be 40 characters or less\")\r\n    .required(\"Country is required\"),\r\n});\r\n","import styled from \"styled-components\";\r\nimport { getButtonType } from \"../../../utils/utils\";\r\nimport { types } from \"../../../utils/types\";\r\n\r\nexport const Button = styled.button`\r\n  width: ${(props) => props.theme.width};\r\n  height: ${(props) => props.theme.height};\r\n  background: ${(props) => props.theme.background};\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: ${(props) => props.theme.color};\r\n  text-transform: uppercase;\r\n  letter-spacing: ${(props) => props.theme.letterSpacing};\r\n  font-family: \"Alata\", sans-serif;\r\n  font-size: ${(props) => props.theme.fontSize};\r\n  box-shadow: ${(props) => props.theme.boxShadow};\r\n  cursor: pointer;\r\n  outline: none;\r\n  transition: ${(props) => props.theme.transition};\r\n`;\r\n\r\nButton.defaultProps = {\r\n  theme: {\r\n    width: \"20vw\",\r\n    height: \"10vh\",\r\n    background: \"#f9f9f9\",\r\n    color: \"#322b57\",\r\n    letterSpacing: \"0.5vh\",\r\n    fontSize: \"2.2vh\",\r\n    boxShadow: \"0px 5px 5px 0px #322b57\",\r\n    transition: \"none\",\r\n  },\r\n};\r\n\r\nexport const theme = {\r\n  width: \"10vw\",\r\n  height: \"7vh\",\r\n  background: \"#f9f9f9\",\r\n  color: \"#322b57\",\r\n  letterSpacing: \"0.3vh\",\r\n  fontSize: \"2vh\",\r\n  boxShadow: \"none\",\r\n  transition: \"0.3s\",\r\n};\r\n\r\nexport const CancelButton = getButtonType(types.CANCEL, styled, Button);\r\nexport const ClearButton = getButtonType(types.CLEAR, styled, Button);\r\nexport const ConfirmButton = getButtonType(types.CONFIRM, styled, Button);\r\n","import React from \"react\";\r\nimport classes from \"./ButtonContainer.module.css\";\r\nimport { Button } from \"../../components/UI/Button/Button\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst buttonContainer = ({ clicked }) => {\r\n  return (\r\n    <div>\r\n      <div className={classes.ButtonContainer}>\r\n        <motion.div\r\n          transition={{ duration: 0.4 }}\r\n          whileHover={{ x: [0, 10, -10, 7, -7, 0] }}\r\n        >\r\n          <Button onClick={clicked}>Show Register Form</Button>\r\n        </motion.div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buttonContainer;\r\n","import React from \"react\";\r\nimport classes from \"./LabelContainer.module.css\";\r\n\r\nconst labelContainer = ({ children }) => {\r\n  return <div className={classes.LabelContainer}>{children}</div>;\r\n};\r\n\r\nexport default labelContainer;\r\n","import React from \"react\";\r\nimport classes from \"./InputContainer.module.css\";\r\n\r\nconst inputContainer = ({ children }) => {\r\n  return <div className={classes.InputContainer}>{children}</div>;\r\n};\r\n\r\nexport default inputContainer;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Input = styled.input`\r\n  width: 25vw;\r\n  height: 7vh;\r\n  border-radius: 5px;\r\n  background-color: #d1d0d8;\r\n  border: none;\r\n  outline: none;\r\n  font-family: \"Alata\", sans-serif;\r\n  padding: 10px;\r\n  font-size: 2.5vh;\r\n  color: #312c49;\r\n  letter-spacing: 0.2vw;\r\n\r\n  :focus {\r\n    border: 2px solid #312c49;\r\n  }\r\n\r\n  ::placeholder {\r\n    font-family: \"Alata\", sans-serif;\r\n    padding: 10px;\r\n    font-size: 2vh;\r\n    color: #60568f;\r\n    letter-spacing: 0.2vw;\r\n  }\r\n\r\n  ::-webkit-inner-spin-button,\r\n  ::-webkit-outer-spin-button {\r\n    opacity: 0;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./RegisterForm.module.css\";\r\nimport { Formik, Form } from \"formik\";\r\nimport LabelContainer from \"../../../containers/FormContainer/LabelContainer/LabelContainer\";\r\nimport InputContainer from \"../../../containers/FormContainer/InputContainer/InputContainer\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport {\r\n  CancelButton,\r\n  ClearButton,\r\n  ConfirmButton,\r\n  theme,\r\n} from \"../Button/Button\";\r\nimport { Input } from \"../Input/Input\";\r\nimport {\r\n  inputFactory,\r\n  labelFactory,\r\n  validationSchema,\r\n} from \"../../../utils/utils\";\r\nimport { inputTypes, placeholderValues } from \"../../../utils/types\";\r\n\r\nclass RegisterForm extends Component {\r\n  render() {\r\n    return (\r\n      <div className={classes.RegisterForm}>\r\n        <h1 className={classes.Header}>Registration</h1>\r\n\r\n        <Formik\r\n          initialValues={{\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            dateOfBirth: \"\",\r\n            city: \"\",\r\n            country: \"\",\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values) => {\r\n            setTimeout(() => {\r\n              console.log(values);\r\n            }, 400);\r\n          }}\r\n        >\r\n          {({ values, isSubmitting, handleReset }) => (\r\n            <Form className={classes.Form}>\r\n              <div className={classes.InputsAndLabels}>\r\n                <LabelContainer>\r\n                  {labelFactory(inputTypes.FIRSTNAME)}\r\n                  {labelFactory(inputTypes.LASTNAME)}\r\n                  {labelFactory(inputTypes.EMAIL)}\r\n                  {labelFactory(inputTypes.DATE)}\r\n                  {labelFactory(inputTypes.CITY)}\r\n                  {labelFactory(inputTypes.COUNTRY)}\r\n                </LabelContainer>\r\n\r\n                <InputContainer>\r\n                  {inputFactory(\r\n                    classes.FieldErrorContainer,\r\n                    inputTypes.FIRSTNAME,\r\n                    inputTypes.TEXT,\r\n                    classes.Field,\r\n                    Input,\r\n                    placeholderValues.GEORGES,\r\n                    inputTypes.FIRSTNAME\r\n                  )}\r\n\r\n                  {inputFactory(\r\n                    classes.FieldErrorContainer,\r\n                    inputTypes.LASTNAME,\r\n                    inputTypes.TEXT,\r\n                    classes.Field,\r\n                    Input,\r\n                    placeholderValues.VILLON,\r\n                    inputTypes.LASTNAME\r\n                  )}\r\n\r\n                  {inputFactory(\r\n                    classes.FieldErrorContainer,\r\n                    inputTypes.EMAIL,\r\n                    inputTypes.EMAIL,\r\n                    classes.Field,\r\n                    Input,\r\n                    placeholderValues.EMAIL,\r\n                    inputTypes.EMAIL\r\n                  )}\r\n\r\n                  {inputFactory(\r\n                    classes.FieldErrorContainer,\r\n                    inputTypes.BIRTHDATE,\r\n                    inputTypes.DATE,\r\n                    classes.Field,\r\n                    Input,\r\n                    placeholderValues.BIRTHDATE,\r\n                    inputTypes.DATE\r\n                  )}\r\n\r\n                  {inputFactory(\r\n                    classes.FieldErrorContainer,\r\n                    inputTypes.CITY,\r\n                    inputTypes.TEXT,\r\n                    classes.Field,\r\n                    Input,\r\n                    placeholderValues.PARIS,\r\n                    inputTypes.CITY\r\n                  )}\r\n\r\n                  {inputFactory(\r\n                    classes.FieldErrorContainer,\r\n                    inputTypes.COUNTRY,\r\n                    inputTypes.TEXT,\r\n                    classes.Field,\r\n                    Input,\r\n                    placeholderValues.FRANCE,\r\n                    inputTypes.COUNTRY\r\n                  )}\r\n                </InputContainer>\r\n              </div>\r\n\r\n              <div className={classes.ConfirmationContainer}>\r\n                <div className={classes.EmptyContainer}></div>\r\n                <div className={classes.ConfirmationAlert}>\r\n                  {isSubmitting\r\n                    ? `Hello ${values.firstName}! You've registered successfully :)`\r\n                    : null}\r\n                </div>\r\n              </div>\r\n\r\n              <div className={classes.SubmitContainer}>\r\n                <div className={classes.EmptyContainer}></div>\r\n                <div className={classes.Buttons}>\r\n                  <ThemeProvider theme={theme}>\r\n                    <CancelButton onClick={this.props.clicked}>\r\n                      Cancel\r\n                    </CancelButton>\r\n                    <ClearButton type=\"reset\" onClick={handleReset}>\r\n                      Clear\r\n                    </ClearButton>\r\n                    <ConfirmButton type=\"submit\" disabled={isSubmitting}>\r\n                      Confirm\r\n                    </ConfirmButton>\r\n                  </ThemeProvider>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport classes from \"./FormContainer.module.css\";\r\nimport RegisterForm from \"../../components/UI/RegisterForm/RegisterForm\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nconst formContainer = ({ displayed, clicked }) => {\r\n  return (\r\n    <div>\r\n      <AnimatePresence>\r\n        {displayed ? (\r\n          <motion.div\r\n            className={classes.FormContainer}\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            transition={{ ease: \"easeIn\", duration: 0.2 }}\r\n            exit={{ opacity: 0 }}\r\n          >\r\n            <RegisterForm clicked={clicked} />\r\n          </motion.div>\r\n        ) : null}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default formContainer;\r\n","import React from \"react\";\r\nimport classes from \"./Backdrop.module.css\";\r\n\r\nconst backdrop = ({ clicked, displayed }) => {\r\n  return (\r\n    <div>\r\n      {displayed ? (\r\n        <div className={classes.Backdrop} onClick={clicked}></div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default backdrop;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./MainContainer.module.css\";\r\nimport ButtonContainer from \"../ButtonContainer/ButtonContainer\";\r\nimport FormContainer from \"../FormContainer/FormContainer\";\r\nimport Backdrop from \"../../components/UI/Backdrop/Backdrop\";\r\n\r\nclass MainContainer extends Component {\r\n  state = {\r\n    isFormDisplayed: false,\r\n    isBackdropDisplayed: false,\r\n  };\r\n\r\n  handleToggleFormAndBackdrop = () => {\r\n    this.setState({\r\n      isFormDisplayed: !this.state.isFormDisplayed,\r\n      isBackdropDisplayed: !this.state.isBackdropDisplayed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.MainContainer}>\r\n        <ButtonContainer clicked={this.handleToggleFormAndBackdrop} />\r\n        <FormContainer\r\n          displayed={this.state.isFormDisplayed}\r\n          clicked={this.handleToggleFormAndBackdrop}\r\n        />\r\n        <Backdrop\r\n          displayed={this.state.isBackdropDisplayed}\r\n          clicked={this.handleToggleFormAndBackdrop}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainContainer;\r\n","import React, { Component } from \"react\";\nimport Auxiliary from \"./components/hoc/Auxiliary\";\nimport MainContainer from \"./containers/MainContainer/MainContainer\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Auxiliary>\n        <MainContainer />\n      </Auxiliary>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}